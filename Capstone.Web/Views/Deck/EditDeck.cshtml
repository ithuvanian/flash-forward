@using Capstone.Web.Models
@using System.Collections.Generic
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    int tagCount = Model.ThisDeckTags.Count;
}
@model Deck

<script type="text/javascript" src="../../Scripts/CardScripts/EditDeck.js"></script>
<div hidden id="tagCount" data-name="@tagCount"></div>


<h2 class="title">Edit Deck: @Model.Name</h2>

<!--Edit deck name-->
@using (Html.BeginForm("EditDeckName", "Deck", FormMethod.Post))
{
    if (ViewBag.AddedCard != null)
    {
        <div class="successMsg">
            <span class="success_msg">&#10003; SUCCESS</span> Your card for <b>@ViewBag.AddedCard.Front</b> was added.
            <b>@Html.ActionLink("Click here", "CardView", "Card")</b> to return to card view.
        </div>

    }

    <div>
        @Html.Label("Name", "Deck Name: ")

        @Html.TextBoxFor(m => m.Name)

        @Html.HiddenFor(m => m.DeckID)

        <button class="list_item btn">
            Change Name
        </button>
    </div>
}
<hr />

<h6 class="bold_heading">Tags:</h6>

<!--Add a tag to the deck-->
<div class="allTags">
    @foreach (string tag in Model.ThisDeckTags)
    {

        using (Html.BeginForm("RemoveDeckTag", "Deck", new { deckID = Model.DeckID, tagName = tag, expanded = false }, FormMethod.Post, new { @class = "remove_tag_action" }))
        {
            <span class="added_tag">@tag</span>
            @Html.HiddenFor(m => Model.DeckID)

            <span id="@tag" class="x_button remove_tag">&#x2297;</span>
        }
    }

    <p></p>
    <h6 class="addtag bold_heading">Choose tags to add to your deck:</h6>

    @if (Model.AllTags.Count > 30)
    {
        <div class="tag_section limited_tags">
            @for (int i = 0; i < 30; i++)
            {
                string tag = Model.AllTags[i];
                if (!Model.ThisDeckTags.Contains(tag))
                {
                    using (Html.BeginForm("AddDeckTag", "Deck", new { deckID = Model.DeckID, tagName = tag, expanded = false }, FormMethod.Post, new { @class = "add_tag_action" }))
                    {
                        <span id="@tag" class="add_tag inactive_tag">@tag</span>
                    }
                }
            }
            @Html.ActionLink("See all >>", "TagExpand", "Deck", new { id = Model.DeckID }, null)
        </div>
    }
    else
    {
        foreach (string tag in Model.AllTags)
        {
            if (!Model.ThisDeckTags.Contains(tag))
            {
                using (Html.BeginForm("AddDeckTag", "Deck", new { deckID = Model.DeckID, tagName = tag, expanded = false }, FormMethod.Post, new { @class = "add_tag_action" }))
                {
                    <span id="@tag" class="add_tag inactive_tag">@tag</span>
                }
            }
        }
    }

    <p></p>
    <h6 class="createtag bold_heading">Create a new tag for this deck:</h6>

    <div>
        @using (Html.BeginForm("CreateDeckTag", "Deck", FormMethod.Post))
        {
            <input name="TagName" />

            @Html.HiddenFor(m => Model.DeckID)

            <button type="submit" class="list_item btn">
                Add new tag
            </button>
        }
    </div>
</div>
<hr />

<!--Lists cards in deck for review or removal-->


<h6 class="bold_heading">Cards in this deck:</h6>
@if (Model.DeckCards.Count != 0)
{
    @Html.ActionLink("Find more cards to add >>", "CardView", "Card")
    <div class="card_flex_container">
        @foreach (var card in Model.DeckCards)
        {
            <div class="card_bothsides">

                @if (ViewBag.AddedCard != null)
                {
                    if (card.CardID == ViewBag.AddedCard.CardID)
                    {
                        <span class="success_msg">successfully added</span>
                    }
                }

                <div class="card_front">@card.Front</div>

                <div class="card_back">@card.Back</div>

                @using (Html.BeginForm("RemoveThisCard", "Deck", new { id = card.CardID, expanded = false }, FormMethod.Post, new { @class = "remove_card_action" }))
                {
                    <span class="x_button remove_card">
                        &#x2297;
                    </span>
                }

                <div class="card_options">
                    @Html.ActionLink("Modify this card", "CardModify", "Card", new { id = card.CardID }, new { @class = "list_item btn" })
                </div>
            </div>
        }
    </div>
}
else
{
    <p>
        There are no cards in this deck.
        @Html.ActionLink("Add some here >>", "CardView", "Card", null, new { @class = "list_item btn" })
    </p>
}



